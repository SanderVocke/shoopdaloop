name: Build and test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  PIP_BREAK_SYSTEM_PACKAGES: 1

permissions:
  contents: read
  checks: write

jobs:


  ##############################################################
  ## Linux
  ##############################################################

  build_linux:
    strategy:
      fail-fast: false
      matrix:
        kind:
          - name: linux_debug
            build_type: 'Debug'
            # cmake_opts: '"BACKEND_JACK" = "Off", "HAVE_LV2" = "Off"'
        container: [ "sandervocke/shoopdaloop_build_base_debian_bullseye_x86_64:latest" ]
        container_options: [ "--user root --workdir /" ]
        arch: [ x86_64 ]
        manylinux_arch: [ x86_64 ]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
      options: ${{ matrix.container_options }}
    #if: false
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup Shell Wrapper
      uses: sandervocke/setup-shell-wrapper@v1
    - name: Use regular shell
      shell: bash
      run: echo "WRAP_SHELL=bash" >> $GITHUB_ENV
    - name: Build
      uses: ./.github/actions/build_toplevel
      with:
        name: ${{ matrix.kind.name }}
        cmake_build_type: ${{ matrix.kind.build_type }}
        cmake_opts: ${{ matrix.kind.cmake_opts }}
        prepare_kind: 'linux'
        python: python3.9
        rename_wheel_sed: "'s/([^\\.]+)[\\.]+whl/\\1.whl/g'" # remove double dot
        pyinstaller: ${{ matrix.kind.pyinstaller }}
        package_kind: ${{ matrix.kind.package_kind }}
        coverage: ${{ matrix.kind.coverage }}
    # - name: Setup tmate session
    #   if: failure()
    #   uses: SanderVocke/action-tmate@master
        
  test_linux:
    strategy:
      fail-fast: false
      matrix:
        kind:
          - name: debug_wheel_debian_stable
            python: python3
            python_pip_args: -m pip
            python_pytest_args: -m pytest
            container: sandervocke/shoopdaloop_run_base_debian_latest_x86_64:latest
            package: wheel_linux_debug
    runs-on: ubuntu-latest
    needs: build_linux
    #if: false
    container:
      image: ${{ matrix.kind.container }}
      options: --user root --workdir / # Note: this gets disregarded if container is null
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Shell Wrapper
      uses: sandervocke/setup-shell-wrapper@v1
    - name: Use regular shell
      shell: bash
      run: echo "WRAP_SHELL=bash" >> $GITHUB_ENV
    - name: Test
      uses: ./.github/actions/test_toplevel
      with:
        name: ${{ matrix.kind.name }}
        package: ${{ matrix.kind.package }}
        asan: ${{ matrix.kind.asan }}
        coverage: ${{ matrix.kind.coverage }}
        python_pip_args: ${{ matrix.kind.python_pip_args }}
        python: ${{ matrix.kind.python }}
        run_cmd_prefix: ${{ matrix.kind.run_cmd_prefix }}
        python_pytest_args: ${{ matrix.kind.python_pytest_args }}
        qpa_platform: vnc
        pyinstaller: ${{ matrix.kind.pyinstaller }}
        codecov_token: ${{ secrets.CODECOV_TOKEN }}



