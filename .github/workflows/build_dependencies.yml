name: Build and upload dependencies

on:
  push:
    branches: [ "*" ]
    tags: "v*.*.*"
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:

jobs:
  run:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            name-suffix: linux-x64
            container: "docker.io/sandervocke/shoopdaloop_build_base_debian_bullseye_x86_64:latest"
            python: python3
            path_separator: ":"
            setup: false
          - runs-on: ubuntu-latest
            name-suffix: linux-arm
            container: "docker.io/sandervocke/shoopdaloop_build_base_debian_bullseye_arm64:latest"
            python: python3
            arch: arm64
            path_separator: ":"
            setup: false
          - runs-on: macos-14
            name-suffix: macos-arm
            container: false
            python: python3
            path_separator: ":"
            setup: false
          - runs-on: macos-12
            name-suffix: macos-x64
            container: false
            python: python3
            path_separator: ":"
            setup: false
          - runs-on: windows-2022
            name-suffix: windows-x64
            container: false
            python: python3
            path_separator: ";"
            setup_msvc: true
            setup_choco_pkgconfig: true
            remove_mingw_linker: true
    env:
      PIP_BREAK_SYSTEM_PACKAGES: 1
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start container
        if: ${{ matrix.container }}
        uses: sandervocke/setup-qemu-container@v1
        with:
          container: ${{ matrix.container }}
          arch: ${{ matrix.arch }}
      - name: Setup Shell Wrapper
        uses: sandervocke/setup-shell-wrapper@v1
      - name: Use regular shell
        if: ${{ ! matrix.container }}
        shell: bash
        run: echo "WRAP_SHELL=bash" >> $GITHUB_ENV
      - name: Use container shell
        if: ${{ matrix.container }}
        shell: bash
        run: echo "WRAP_SHELL=run-in-container.sh" >> $GITHUB_ENV

      - name: Install Meson
        shell: wrap-shell {0}
        run: |
           ${{ matrix.python }} -m pip install meson

      - uses: seanmiddleditch/gha-setup-ninja@master

      - shell: wrap-shell {0}
        run: |
           echo "PATH_SEPARATOR=${{ matrix.path_separator }}" | tee -a $GITHUB_ENV

      - if: ${{ matrix.setup_msvc }}
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - if: ${{ matrix.setup_choco_pkgconfig }}
        shell: wrap-shell {0}
        run: choco install pkgconfiglite

      - if: ${{ matrix.remove_mingw_linker }}
        shell: wrap-shell {0}
        run: |
           rm -f /usr/bin/link
           rm -f /usr/bin/link.exe

      - name: Build LV2
        uses: ./.github/actions/build_and_upload_meson_dependency
        env:
           MESON: ${{ matrix.python }} -m mesonbuild.mesonmain
        with:
           name: lv2-v1.18.10-release-${{ matrix.name-suffix }}
           repo: https://github.com/lv2/lv2.git
           git_rev: v1.18.10
           meson_options: --default-library=shared --buildtype release

      - name: Build zix
        uses: ./.github/actions/build_and_upload_meson_dependency
        env:
           MESON: ${{ matrix.python }} -m mesonbuild.mesonmain
        with:
           name: zix-v0.4.2-release-${{ matrix.name-suffix }}
           repo: https://github.com/drobilla/zix.git
           git_rev: v0.4.2
           meson_options: --default-library=shared --buildtype release

      - name: Build serd
        uses: ./.github/actions/build_and_upload_meson_dependency
        env:
           MESON: ${{ matrix.python }} -m mesonbuild.mesonmain
        with:
           name: serd-v0.32.2-release-${{ matrix.name-suffix }}
           repo: https://github.com/drobilla/serd.git
           git_rev: v0.32.2
           meson_options: --default-library=shared --buildtype release

      - name: Build sord
        uses: ./.github/actions/build_and_upload_meson_dependency
        env:
           MESON: ${{ matrix.python }} -m mesonbuild.mesonmain
        with:
           name: sord-v0.16.16-release-${{ matrix.name-suffix }}
           repo: https://github.com/drobilla/sord.git
           git_rev: v0.16.16
           meson_options: --default-library=shared --buildtype release

      - name: Build sratom
        uses: ./.github/actions/build_and_upload_meson_dependency
        env:
           MESON: ${{ matrix.python }} -m mesonbuild.mesonmain
        with:
           name: sratom-v0.6.16-release-${{ matrix.name-suffix }}
           repo: https://github.com/lv2/sratom.git
           git_rev: v0.6.16
           meson_options: --default-library=shared --buildtype release

      - name: Build lilv
        uses: ./.github/actions/build_and_upload_meson_dependency
        env:
           MESON: ${{ matrix.python }} -m mesonbuild.mesonmain
        with:
           name: lilv-v0.24.24-release-${{ matrix.name-suffix }}
           repo: https://github.com/lv2/lilv.git
           git_rev: v0.24.24
           meson_options: --default-library=shared --buildtype release
