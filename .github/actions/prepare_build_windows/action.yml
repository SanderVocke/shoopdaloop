name: prepare_build_windows
description: Prepare Windows for building Shoopdaloop wheels

runs:
  using: "composite"
  steps:
  # - uses: actions/setup-python@v4
  #   with:
  #     python-version: '3.9'
  # - name: Setup tmate session
  #   uses: SanderVocke/action-tmate@master
  - name: Build Python
    shell: wrap-shell {0}
    run: |
      git clone --depth 1 --branch v3.9.19 https://github.com/python/cpython.git
      wget https://github.com/SanderVocke/shoopdaloop/releases/download/build-assets-1/disable_seh.patch
      cd cpython
      git apply ../disable_seh.patch
      cd PCbuild
      powershell -Command ".\get_externals.bat"
      powershell -Command ".\build.bat -e -p x64"
      ./amd64/python.exe -m venv /custom_python
  - name: Report python version
    shell: wrap-shell {0}
    run: |
      echo "Default python version is $(/custom_python/Scripts/python.exe --version)"
  - name: Install boost
    id: install_boost
    uses: ./.github/actions/install_boost_headers
    with:
      dir: includes
  - name: Install pkgconfig lite
    shell: wrap-shell {0}
    run: |
      curl -L https://github.com/SanderVocke/shoopdaloop/releases/download/build-assets-1/pkg-config-lite-0.28-1_bin-win32.zip --output pkg-config-lite-0.28-1_bin-win32.zip
      unzip pkg-config-lite-0.28-1_bin-win32.zip
      cp pkg-config-lite-0.28-1/bin/* /c/mingw64/bin
  - name: Install JACK
    shell: pwsh
    run: |
      curl -L https://github.com/SanderVocke/shoopdaloop/releases/download/build-assets-1/jack2-win64-v1.9.22-assets.zip --output jack2-win64-v1.9.22-assets.zip
      unzip jack2-win64-v1.9.22-assets.zip -d jack
  - name: Build pthreads4w
    shell: pwsh
    run: |
      curl -L https://github.com/SanderVocke/shoopdaloop/releases/download/build-assets-1/pthreads4w.zip --output pthreads4w.zip
      unzip pthreads4w.zip -d pthreads4w

  - name: Path conversion
    id: pathconvert
    shell: wrap-shell {0}
    run: |
      echo "boost_include_dir=$(cygpath -w ${{ steps.install_boost.outputs.include_dir }})" | tee -a $GITHUB_OUTPUT
      echo "jack_dir=$(cygpath -w $(pwd)/jack)" | tee -a $GITHUB_OUTPUT
      echo "pthreads_dir=$(cygpath -w $(pwd)/pthreads4w/pthreads4w)" | tee -a $GITHUB_OUTPUT
  - name: Set up Clang
    uses: egor-tensin/setup-clang@v1
    with:
      version: latest
      platform: x64
  - name: Install dependencies and provide build command prefix
    shell: wrap-shell {0}
    run: |
      python -m pip install build virtualenv pytest meson
      choco install -y ninja
      echo "set \"CMAKE_INCLUDE_PATH=${{ steps.pathconvert.outputs.boost_include_dir }}\" && set \"C_INCLUDE_PATH=${{ steps.pathconvert.outputs.pthreads_dir }}\" && set \"CPLUS_INCLUDE_PATH=${{ steps.pathconvert.outputs.pthreads_dir }}\" && set \"CMAKE_PREFIX_PATH=${{ steps.pathconvert.outputs.jack_dir }};${{ steps.pathconvert.outputs.pthreads_dir }}\" &&" > prepend_build_cmd.txt
