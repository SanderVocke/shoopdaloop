name: prepare_build_windows
description: Prepare Windows for building Shoopdaloop wheels

runs:
  using: "composite"
  steps:
  - uses: actions/setup-python@v4
    with:
      python-version: '3.8'
  - name: Report python version
    shell: bash
    run: |
      echo "Default python version is $(python --version)"
  - name: Install boost
    id: install_boost
    uses: ./.github/actions/install_boost_headers
    with:
      dir: includes
  - name: Install pkgconfig lite
    shell: bash
    run: |
      curl -L https://github.com/SanderVocke/shoopdaloop/releases/download/build-assets-1/pkg-config-lite-0.28-1_bin-win32.zip --output pkg-config-lite-0.28-1_bin-win32.zip
      unzip pkg-config-lite-0.28-1_bin-win32.zip
      cp pkg-config-lite-0.28-1/bin/* /c/mingw64/bin
  - name: Install JACK
    shell: pwsh
    run: |
      curl -L https://github.com/SanderVocke/shoopdaloop/releases/download/build-assets-1/jack2-win64-v1.9.22-assets.zip --output jack2-win64-v1.9.22-assets.zip
      unzip jack2-win64-v1.9.22-assets.zip -d jack
  - name: Install pthread-win32
    shell: pwsh
    run: |
      curl -L https://github.com/SanderVocke/shoopdaloop/releases/download/build-assets-1/pthreads-w32-2-9-1-release.zip --output pthreads-w32-2-9-1-release.zip
      unzip pthreads-w32-2-9-1-release.zip -d pthreads-w32

  - name: Path conversion
    id: pathconvert
    shell: bash
    run: |
      echo "boost_include_dir=$(cygpath -w ${{ steps.install_boost.outputs.include_dir }})" | tee -a $GITHUB_OUTPUT
      echo "jack_dir=$(cygpath -w $(pwd)/jack)" | tee -a $GITHUB_OUTPUT
      echo "pthreads_dir=$(cygpath -w $(pwd)/pthreads-w32)" | tee -a $GITHUB_OUTPUT
  - name: Set up Clang
    uses: egor-tensin/setup-clang@v1
    with:
      version: latest
      platform: x64
  - name: Install dependencies and provide build command prefix
    shell: bash
    run: |
      python -m pip install build virtualenv pytest meson
      choco install -y ninja
      echo "set \"CMAKE_INCLUDE_PATH=${{ steps.pathconvert.outputs.boost_include_dir }}\" && set \"CMAKE_PREFIX_PATH=${{ steps.pathconvert.outputs.jack_dir }};${{ steps.pathconvert.outputs.pthreads_dir }}\" &&" > prepend_build_cmd.txt
