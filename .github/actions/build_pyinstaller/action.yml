# Install a wheel and then build a PyInstaller package from it
 
inputs:
  python:
    description: "Python command"
    required: true
  wheel:
    description: "Wheel to install"
    required: true
  find_pyinstaller:
    description: "Don't assume pyinstaller is in the PATH, find it via pip"
    required: false
  appbundle:
    description: "Build an app bundle"
    required: false

outputs:
  distribution:
    description: "Folder where the finished PyInstaller/AppBundle distribution is located"
    value: ${{ steps.output.outputs.distribution }}

runs:
  using: "composite"
  steps:
  - name: PyInstaller
    shell: bash
    run: |
      export PIP="${{ inputs.python }} -m pip"
      $PIP install --upgrade pip
      $PIP install pyinstaller
      $PIP install ${{ inputs.wheel }}
  
  - name: Find PyInstaller
    shell: bash
    id: find
    run: |
      export PIP="${{ inputs.python }} -m pip"
      export PYINSTALLER_SEARCH=$($PIP show pyinstaller | grep Location | sed 's/Location: //g')/$($PIP show -f pyinstaller | grep -E '.*/pyinstaller' | sed -r 's/^\s+//g')
      export PYINSTALLER_DEFAULT=pyinstaller
      export PYINSTALLER="${{ inputs.find_pyinstaller && '$PYINSTALLER_SEARCH' || '$PYINSTALLER_DEFAULT' }}"
      echo "PyInstaller: $PYINSTALLER"
      echo "pyinstaller=$PYINSTALLER" | tee -a $GITHUB_OUTPUT

  - name: Build
    shell: bash
    id: pyinstaller
    run: |
      cd distribution/pyinstaller
      ${{ steps.find.outputs.pyinstaller }} shoopdaloop.spec

  - name: Find distribution
    shell: bash
    if: ${{ ! inputs.appbundle }}
    run: echo "distribution=distribution/pyinstaller/dist" | tee -a $GITHUB_ENV
  
  - name: Find app bundle
    shell: bash
    if: ${{ inputs.appbundle }}
    run: |
      mkdir -p appbundle
      cp -r distribution/pyinstaller/dist/shoopdaloop.app appbundle/shoopdaloop.app
      echo "distribution=appbundle" | tee -a $GITHUB_ENV

  - name: Set output
    id: output
    shell: bash
    run: |
      echo "distribution=${{ env.distribution }}" | tee -a $GITHUB_OUTPUT
    