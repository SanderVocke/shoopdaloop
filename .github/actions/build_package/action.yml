# Create a package/installer using fpm or InnoSetup

inputs:
  input_path:
    description: "input path for the build, if needed"
  package_kind:
    description: "innosetup / linuxes / pyinstaller"

outputs:
  output:
    description: "Built artifact(s)"
    value: ${{ steps.find_output.outputs.output }}
  

runs:
  using: "composite"
  steps:  

  # Linux packages
  - name: Build .deb + pacman + .rpm
    if: ${{ inputs.package_kind == 'linuxes' }}
    shell: bash
    run: |
      mkdir -p linux_packages
      cd linux_packages
      fpm \
        -s dir \
        -t deb \
        --name shoopdaloop \
        --license gpl3 \
        --url "https://sandervocke.github.io/shoopdaloop/" \
        --maintainer "Sander Vocke <sandervocke@gmail.com>" \
        ${{ inputs.input_path }}=/opt/shoopdaloop
      fpm \
        -s dir \
        -t rpm \
        --name shoopdaloop \
        --license gpl3 \
        --url "https://sandervocke.github.io/shoopdaloop/" \
        --maintainer "Sander Vocke <sandervocke@gmail.com>" \
        ${{ inputs.input_path }}=/opt/shoopdaloop
      fpm \
        -s dir \
        -t pacman \
        --name shoopdaloop \
        --license gpl3 \
        --url "https://sandervocke.github.io/shoopdaloop/" \
        --maintainer "Sander Vocke <sandervocke@gmail.com>" \
        ${{ inputs.input_path }}=/opt/shoopdaloop
  - name: Find fpm package
    if: ${{ inputs.package_kind == 'linuxes' }}
    shell: bash
    run:
      ls
      PKGS=$(find ./linux_packages -type f -name "shoopdaloop*")
      echo "pkg=$PKGS" | tee -a $GITHUB_ENV

  # Windows installer (InnoSetup)
  - name: Compile .ISS to .EXE Installer
    uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
    if: ${{ inputs.package_kind == 'innosetup' }}  
    with:
      path: distribution/innosetup/shoopdaloop.iss
      options: /O+
  - name: Move .EXE installer
    if: ${{ inputs.package_kind == 'innosetup' }}   
    shell: bash
    run: |
      ls distribution/innosetup
      INSTALLER=$(find distribution/innosetup -name "ShoopDaLoop-*.exe")
      echo "pkg=$INSTALLER" | tee -a $GITHUB_ENV
  
  - name: Find output
    id: find_output
    shell: bash
    run: |
      echo "output=${{ env.pkg }}" | tee -a $GITHUB_OUTPUT
      