name: QML Tests
description: Integration tests at the QML level

inputs:
  variant_name:
    required: true
    type: string
  run_cmd_prefix:
    type: string
    description: "Command-line prefix to use when running the test runner"
  root_path:
    type: string
    required: true
  python_command:
    type: string
    default: python3
  tee_all_output_to:
    type: string
    default: /dev/null
  qt_qpa_platform:
    type: string
    default: vnc
  macos_rpath_patch:
    type: boolean
    required: false
    default: false

runs:
  using: "composite"
  steps:
  - name: prepare
    shell: bash
    run: |
      mkdir -p reports
      echo "results_xml=reports/qml_test_${{ inputs.variant_name }}_results.xml" | tee -a $GITHUB_ENV
    
  # On MacOS, the qml test library won't be able to find and link to the Qt libraries packaged with
  # PySide6. This is because the Qt libraries are not in the default search path. We can fix this by
  # adding the path to the Qt libraries to the rpath of the qml test library.
  - name: rpath patch
    if: ${{ inputs.macos_rpath_patch }}
    shell: bash
    run: |
      install_name_tool -add_rpath @executable_path/../PySide6/Qt/lib ${{ inputs.root_path }}/libqml_tests.dylib

  - name: QML test (${{ inputs.variant_name }})
    shell: bash
    run: >
      ASAN_OPTIONS=detect_leaks=0,new_delete_type_mismatch=0
      QT_QPA_PLATFORM=${{ inputs.qt_qpa_platform }}
      QT_ASSUME_STDERR_HAS_CONSOLE=1
      ${{ inputs.run_cmd_prefix }}
      ${{ inputs.python_command }}
      ${{ inputs.root_path }}/run_qml_tests.py
      -input ${{ inputs.root_path }}/lib/qml/test
      -o ${{ env.results_xml }},junitxml
      2>&1 | tee ${{ inputs.tee_all_output_to }}
  
  - name: Report results filename
    shell: bash
    if: success() || failure()
    run: |
      echo "QML test results file: $(ls -la ${{ env.results_xml }})"
  
  - name: Publish QML Test Report
    if: ${{ !env.ACT && ( success() || failure() ) }}
    uses: mikepenz/action-junit-report@v3
    with:
      report_paths: ${{ env.results_xml }}
      detailed_summary: true
      include_passed: true
      check_name: 'QML test (${{ inputs.variant_name }})'

