name: prepare_vcpkg
description: Prepare vcpkg

inputs:
  GITHUB_TOKEN:
    required: true
    description: "GitHub token"

runs:
  using: "composite"
  steps:

  - name: Export GitHub Actions cache environment variables
    if: always()
    uses: actions/github-script@v7
    with:
      script: |
        core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
        core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

  - name: Checkout
    if: always()
    shell: wrap-shell {0}
    run: |
       git clone --depth 1 --branch 2025.04.09 https://github.com/microsoft/vcpkg.git
  
  - name: Bootstrap
    if: always()
    shell: wrap-shell {0}
    run: |
      cd vcpkg
      ./bootstrap-vcpkg.sh
      echo "NUGET_EXE=$(./vcpkg fetch nuget)" >> $GITHUB_ENV
  
  - name: Set env vars
    if: always()
    shell: wrap-shell {0}
    run: |
     echo "VCPKG_ROOT=$(pwd)/vcpkg" | tee -a $GITHUB_ENV
     echo "$(pwd)/vcpkg" | tee -a $GITHUB_PATH
     LOCAL_FEED_URL="https://nuget.pkg.github.com/${{ env.USERNAME }}/index.json"
     echo "FEED_URL=$LOCAL_FEED_URL" | tee -a $GITHUB_ENV
     echo "clear;nuget,$LOCAL_FEED_URL,readwrite" > ./.github/workflows/vcpkg.yml
  
  - name: Setup NuGet sources
    if: always()
    shell: wrap-shell {0}
    run: |
      ${NUGET_EXE} sources add -Username ${{ env.USERNAME }} -Password ${{ inputs.GITHUB_TOKEN }} -StorePasswordInClearText -Name GitHub -Source "${{ env.FEED_URL }}"
      ${NUGET_EXE} setapikey ${{ inputs.GITHUB_TOKEN }} -Source "${{ env.FEED_URL }}"
