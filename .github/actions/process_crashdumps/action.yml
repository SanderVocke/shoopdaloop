name: QML Tests
description: Integration tests at the QML level

inputs:
  dumps_dir:
    type: string

runs:
  using: "composite"
  steps:

  - name: Process dumps
    id: process
    if: always()
    shell: wrap-shell {0}
    run: |
      set -x
      ls -a ${{ inputs.dumps_dir }}
      if [ $(ls -a ${{ inputs.dumps_dir }} | wc -l) -gt 0 ]; then
        echo "upload=true" | tee -a $GITHUB_OUTPUT
      fi
  
  - name: install stackwalker (Windows)
    if: always() && steps.process.outputs.upload && runner.os == 'Windows'
    shell: wrap-shell {0}
    run: |
       curl -L https://github.com/rust-minidump/rust-minidump/releases/download/v0.26.0/minidump-stackwalk-x86_64-pc-windows-msvc.zip --output stackwalk.zip
       unzip stackwalk.zip -d stackwalk
       echo "$(cygpath -w $(pwd)/stackwalk)" | tee -a $GITHUB_PATH

  - name: install stackwalker (Linux)
    if: always() && steps.process.outputs.upload && runner.os == 'Linux'
    shell: wrap-shell {0}
    run: |
       curl -L https://github.com/rust-minidump/rust-minidump/releases/download/v0.26.0/minidump-stackwalk-x86_64-unknown-linux-gnu.tar.xz --output stackwalk.tar.xz
       tar -xvf stackwalk.tar.xz
       STACKWALK=$(pwd)/$(find . -name "minidump-stackwalk")
       echo "$(dirname $STACKWALK)" | tee -a $GITHUB_PATH

  # TODO: MacOS

  - name: Process crash dumps if found
    if: always() && steps.process.outputs.upload
    shell: wrap-shell {0}
    run: |
      for dump in $(find ${{ inputs.dumps_dir }} -name "*.dmp"); do
        minidump-stackwalk --use-local-debuginfo --outfile ${dump}.stackwalk ${dump}
      done

  - name: Upload dumps
    if: always() && steps.process.outputs.upload
    uses: actions/upload-artifact@v4
    with:
      name: crashdumps_${{ matrix.kind.name }}_${{ github.run_number }}
      path: ${{ inputs.dumps_dir }}

